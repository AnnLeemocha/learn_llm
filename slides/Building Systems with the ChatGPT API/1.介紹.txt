歡迎來到這門使用 ChatGPT API 建構系統的課程。

之前，我和 Isa 曾經講授過一門如何撰寫 ChatGPT 提示詞的課程，但要打造一個系統，遠遠不只是給大型語言模型（LLM）下一個提示或發出一次請求那麼簡單。

在這門簡短的課程中，我們想與你分享使用 LLM 建構複雜應用程式的最佳實踐。

我們會以打造一個端對端的客服助理系統為例，這個系統會串接多次對語言模型的呼叫，根據前一次輸出的結果使用不同的指令，有時甚至會查詢外部資料來源。

舉例來說，假如使用者輸入：「告訴我有哪些電視在賣？」這樣的內容，我們會用以下步驟來處理：

首先，你可以先評估這段輸入是否包含任何有問題的內容，例如仇恨言論。接著，系統會處理這段輸入，判斷它是什麼類型的查詢，是抱怨還是產品資訊請求等等。一旦確定這是一個產品查詢，系統就會擷取與電視相關的資訊，然後使用語言模型撰寫一段有幫助的回覆。最後，系統會再次檢查輸出內容，確認沒有問題，例如不正確或不恰當的回答。

你會發現在這門課程中反覆出現的一個主題是：一個應用程式往往需要多個內部處理步驟，而這些步驟對最終使用者是看不到的。

你經常會想要以多個階段、逐步處理使用者的輸入，才能產生最終呈現給使用者的結果。

當你使用 LLM 來建構複雜的系統時，

從長遠來看，你也會希望這個系統能持續改善。所以我也會和你分享開發一個基於 LLM 的應用程式時，整體的開發流程是什麼樣子，還有一些隨時間持續評估與優化系統的最佳做法。

我們非常感謝許多對這門短課程有所貢獻的人。

在 OpenAI 的團隊中，我們要感謝 Andrew Kondrich、Joe Palermo、Boris Power 和 Ted Sanders。

在 DeepLearning.AI 團隊方面，也感謝 Geoff Ladwig、Eddy Shyu 和 Tommy Nelson。

透過這門短課程，我們希望你能對自己建立一個複雜的多步驟應用程式充滿信心，並且能夠順利維護並持續優化它。

那我們就開始吧！